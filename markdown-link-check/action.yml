# Copyright (c) 2025, NVIDIA CORPORATION.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Markdown Link Check'
description: 'Check markdown links'

runs:
  using: "composite"
  steps:
    - name: Run markdown link check
      id: markdown-link-check
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        max-depth: -1
        use-verbose-mode: 'yes'
        base-branch: 'gh-pages'

    - name: Extract broken links
      id: error-extractor
      if: ${{ always() }}
      shell: bash
      run: |
        LOG_URL="https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/jobs"
        JOB_ID=$(curl -s -H "Authorization: Bearer ${{ github.token }}" "$LOG_URL" | jq -r '.jobs[] | select(.name == "${{ github.job }}") | .id')
        LOG_URL="https://api.github.com/repos/${{ github.repository }}/actions/jobs/$JOB_ID/logs"
        
        curl -s -H "Authorization: Bearer ${{ github.token }}" -H "Accept: application/vnd.github.v3+json" "$LOG_URL" > full_log.txt
        
        sed -n '/> Run gaurav-nelson\/github-action-markdown-link-check@v1/,/^##\[endgroup\]/p' full_log.txt > mlc_output.log

        cat mlc_output.log

        if grep -q '\[✖\]' "$GITHUB_STEP_SUMMARY"; then
          echo "## ❌ Broken Links Detected"
          
          awk '
            BEGIN { file = "unknown" }
            /^FILE: / {
              file = $2
              next
            }
            /\[✖\]/ {
              print file ": " $0
            }
          ' "$GITHUB_STEP_SUMMARY" | while IFS= read -r line; do
            echo "  $line"
          done
          
          echo "Total broken links: $(grep -c '\[✖\]' "$GITHUB_STEP_SUMMARY")"
          exit 1
        else
          echo "## ✅ All Links Validated Successfully"
          exit 0
        fi
      env:
        GITHUB_STEP_SUMMARY: ${{ github.step_summary }}